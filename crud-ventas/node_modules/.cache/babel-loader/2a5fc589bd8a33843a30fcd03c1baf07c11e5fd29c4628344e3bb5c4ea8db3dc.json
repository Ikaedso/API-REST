{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\segur\\\\Downloads\\\\Api-rest-main\\\\crud-ventas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport Modal from \"react-modal\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nfunction App() {\n  _s();\n  // Estados\n  const [ventas, setVentas] = useState([]);\n  const [filteredVentas, setFilteredVentas] = useState([]);\n  const [nuevaVenta, setNuevaVenta] = useState({\n    fecha_venta: \"\",\n    metodo_pago: \"\",\n    total_venta: 0,\n    total_pedido: 0,\n    nombre: \"\",\n    telefono: \"\",\n    documento: \"\",\n    correo: \"\",\n    productos: []\n  });\n  const [selectedVenta, setSelectedVenta] = useState(null);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(4);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedProduct, setSelectedProduct] = useState(\"\"); // Nuevo estado para almacenar el producto seleccionado\n  const initialProducts = [{\n    _id: \"1\",\n    nombre: \"Vestido floral\",\n    precio: 35.99\n  }, {\n    _id: \"2\",\n    nombre: \"Camisa de lino\",\n    precio: 25.49\n  }, {\n    _id: \"3\",\n    nombre: \"Pantalón vaquero\",\n    precio: 29.99\n  }, {\n    _id: \"4\",\n    nombre: \"Blusa estampada\",\n    precio: 19.99\n  }, {\n    _id: \"5\",\n    nombre: \"Falda plisada\",\n    precio: 22.99\n  }];\n\n  // Efectos de lado\n\n  useEffect(() => {\n    axios.get(\"http://localhost:9000/api/ventas\").then(response => {\n      setVentas(response.data);\n      setFilteredVentas(response.data); // Inicialmente, mostrar todas las ventas\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n\n  // Funciones\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      const filtered = ventas.filter(venta => venta.documento.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredVentas(filtered);\n    }\n  };\n  const handleProductSelect = e => {\n    const selectedProductId = e.target.value;\n    setSelectedProduct(selectedProductId);\n  };\n  const agregarProductoAVenta = productoId => {\n    const productoExistente = initialProducts.find(p => p._id === productoId);\n    if (productoExistente) {\n      const nuevaListaProductos = [...nuevaVenta.productos, productoExistente];\n      setNuevaVenta(prevNuevaVenta => ({\n        ...prevNuevaVenta,\n        productos: nuevaListaProductos\n      }));\n    } else {\n      console.error(\"Producto no encontrado\");\n    }\n  };\n\n  // Función para eliminar un producto de la lista de productos en la venta\n  const eliminarProductoDeVenta = productoId => {\n    const nuevaListaProductos = nuevaVenta.productos.filter(producto => producto._id !== productoId);\n    setNuevaVenta(prevNuevaVenta => ({\n      ...prevNuevaVenta,\n      productos: nuevaListaProductos\n    }));\n  };\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredVentas.slice(indexOfFirstItem, indexOfLastItem);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNuevaVenta(prevNuevaVenta => ({\n      ...prevNuevaVenta,\n      [name]: value\n    }));\n  };\n  const crearVenta = e => {\n    e.preventDefault();\n    const selectedDate = new Date(nuevaVenta.fecha_venta);\n    const currentDate = new Date();\n    if (selectedDate.toISOString().slice(0, 10) !== currentDate.toISOString().slice(0, 10)) {\n      alert(\"Selecciona la fecha actual\");\n      return;\n    }\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(nuevaVenta.correo)) {\n      alert(\"Ingrese un correo electrónico válido\");\n      return;\n    }\n    const numberFields = [\"total_venta\", \"total_pedido\", \"telefono\"];\n    const invalidFields = [];\n    numberFields.forEach(field => {\n      if (isNaN(parseFloat(nuevaVenta[field]))) {\n        invalidFields.push(field);\n      }\n    });\n    if (invalidFields.length > 0) {\n      alert(\"Los campos \" + invalidFields.join(\", \") + \" deben ser números\");\n      return;\n    }\n    const totalVenta = nuevaVenta.productos.reduce((total, producto) => total + producto.precio, 0);\n    const totalPedido = totalVenta;\n    const formattedData = {\n      fecha_venta: currentDate.toISOString(),\n      metodo_pago: nuevaVenta.metodo_pago,\n      total_venta: totalVenta,\n      total_pedido: totalPedido,\n      nombre: nuevaVenta.nombre,\n      telefono: nuevaVenta.telefono,\n      documento: nuevaVenta.documento,\n      correo: nuevaVenta.correo,\n      productos: nuevaVenta.productos // Verifica que esta parte esté bien formada\n    };\n\n    axios.post(\"http://localhost:9000/api/ventas\", formattedData).then(response => {\n      setVentas([...ventas, response.data]);\n      setNuevaVenta({\n        fecha_venta: \"\",\n        metodo_pago: \"\",\n        total_venta: 0,\n        total_pedido: 0,\n        nombre: \"\",\n        telefono: \"\",\n        documento: \"\",\n        correo: \"\",\n        productos: [] // Limpiar la lista de productos después de enviar la venta\n      });\n\n      setModalIsOpen(false);\n    }).catch(error => {\n      console.error(\"Error creating venta:\", error);\n    });\n    console.log(\"Datos a enviar:\", formattedData);\n  };\n  const editarVenta = (id, productosEditados) => {\n    axios.put(`http://localhost:9000/api/ventas/${id}`, {\n      productos: productosEditados\n    }).then(response => {\n      console.log(\"Productos de la venta editados:\", response.data);\n      // Aquí puedes manejar la respuesta después de editar los productos de la venta\n      // Por ejemplo, actualizar el estado o realizar otra acción necesaria\n    }).catch(error => {\n      console.error(\"Error al editar los productos de la venta:\", error);\n      // Aquí puedes manejar el error, mostrar un mensaje al usuario, etc.\n    });\n  };\n\n  const eliminarVenta = id => {\n    axios.delete(`http://localhost:9000/api/ventas/${id}`).then(() => {\n      const updatedVentas = ventas.filter(venta => venta._id !== id);\n      setVentas(updatedVentas);\n      const updatedFilteredVentas = filteredVentas.filter(venta => venta._id !== id);\n      setFilteredVentas(updatedFilteredVentas);\n    }).catch(error => {\n      console.error(\"Error deleting venta:\", error);\n    });\n  };\n  const generarReportePDF = () => {\n    if (Array.isArray(currentItems)) {\n      const doc = new jsPDF();\n      let y = 15;\n      doc.text(\"Reporte de Ventas\", 15, 10);\n      currentItems.forEach(venta => {\n        doc.text(`Fecha de Venta: ${venta.fecha_venta}`, 15, y);\n        doc.text(`Método de Pago: ${venta.metodo_pago}`, 15, y + 10);\n        doc.text(`Total de Venta: ${venta.total_venta}`, 15, y + 20);\n        doc.text(`Total de Pedido: ${venta.total_pedido}`, 15, y + 30);\n        doc.text(`Nombre: ${venta.nombre}`, 15, y + 40);\n        doc.text(`Teléfono: ${venta.telefono}`, 15, y + 50);\n        doc.text(`Documento: ${venta.documento}`, 15, y + 60);\n        doc.text(`Correo: ${venta.correo}`, 15, y + 70);\n        y += 90;\n        if (y >= 280) {\n          doc.addPage();\n          y = 15;\n        }\n      });\n      doc.save(\"reporte_ventas.pdf\");\n    } else {\n      console.error(\"currentItems no es un array:\", currentItems);\n    }\n  };\n  const openEditModal = ventaId => {\n    const ventaSeleccionada = ventas.find(venta => venta._id === ventaId);\n    setSelectedVenta(ventaSeleccionada);\n    setEditModalIsOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ventas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar por documento\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalIsOpen(true),\n      children: \"Agregar Nueva Venta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha de Venta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"M\\xE9todo de Pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total de Venta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total de Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tel\\xE9fono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Documento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentItems.map(venta => {\n          const fechaVenta = new Date(venta.fecha_venta);\n          const formattedDate = `${fechaVenta.getDate()}/${fechaVenta.getMonth() + 1}/${fechaVenta.getFullYear()}`;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: formattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: venta.metodo_pago\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: venta.total_venta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: venta.total_pedido\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: venta.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: venta.telefono\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: venta.documento\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: venta.correo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openEditModal(venta._id),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => eliminarVenta(venta._id),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, venta._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: Math.ceil(filteredVentas.length / itemsPerPage)\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(index + 1),\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generarReportePDF,\n      children: \"Generar Reporte PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Agregar Nueva Venta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: crearVenta,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"Fecha de venta\",\n          name: \"fecha_venta\",\n          value: nuevaVenta.fecha_venta,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"M\\xE9todo de pago\",\n          value: nuevaVenta.metodo_pago,\n          onChange: e => setNuevaVenta({\n            ...nuevaVenta,\n            metodo_pago: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Total de venta\",\n          value: nuevaVenta.total_venta,\n          onChange: e => setNuevaVenta({\n            ...nuevaVenta,\n            total_venta: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Total de pedido\",\n          value: nuevaVenta.total_pedido,\n          onChange: e => setNuevaVenta({\n            ...nuevaVenta,\n            total_pedido: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre\",\n          value: nuevaVenta.nombre,\n          onChange: e => setNuevaVenta({\n            ...nuevaVenta,\n            nombre: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tel\\xE9fono\",\n          value: nuevaVenta.telefono,\n          onChange: e => setNuevaVenta({\n            ...nuevaVenta,\n            telefono: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Documento\",\n          value: nuevaVenta.documento,\n          onChange: e => setNuevaVenta({\n            ...nuevaVenta,\n            documento: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Correo\",\n          value: nuevaVenta.correo,\n          onChange: e => setNuevaVenta({\n            ...nuevaVenta,\n            correo: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedProduct,\n          onChange: handleProductSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), initialProducts.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: producto._id,\n            children: [producto.nombre, \" - $\", producto.precio]\n          }, producto._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => agregarProductoAVenta(selectedProduct),\n          children: \"Agregar Producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: nuevaVenta.productos && nuevaVenta.productos.map(producto => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [producto.nombre, \" - $\", producto.precio, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => eliminarProductoDeVenta(producto._id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this)]\n          }, producto._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Crear Venta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: editModalIsOpen,\n      onRequestClose: () => setEditModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          editarVenta(selectedVenta._id, selectedVenta.productos);\n          setEditModalIsOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => setEditModalIsOpen(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Editar Productos de Venta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedVenta && selectedVenta.productos.map((producto, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: producto.nombre,\n                onChange: e => {\n                  const newProducts = [...selectedVenta.productos];\n                  newProducts[index].nombre = e.target.value;\n                  setSelectedVenta({\n                    ...selectedVenta,\n                    productos: newProducts\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: producto.precio,\n                onChange: e => {\n                  const newProducts = [...selectedVenta.productos];\n                  newProducts[index].precio = parseFloat(e.target.value);\n                  setSelectedVenta({\n                    ...selectedVenta,\n                    productos: newProducts\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const updatedProducts = selectedVenta.productos.filter((_, idx) => idx !== index);\n                  setSelectedVenta({\n                    ...selectedVenta,\n                    productos: updatedProducts\n                  });\n                },\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedVenta({\n              ...selectedVenta,\n              productos: [...(selectedVenta.productos || []), {\n                nombre: \"\",\n                precio: 0\n              }]\n            }),\n            children: \"Agregar Producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Guardar Cambios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"32WjUjPk7jHAQjnxnhX0aRcLrG4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsPDF","Modal","jsxDEV","_jsxDEV","setAppElement","App","_s","ventas","setVentas","filteredVentas","setFilteredVentas","nuevaVenta","setNuevaVenta","fecha_venta","metodo_pago","total_venta","total_pedido","nombre","telefono","documento","correo","productos","selectedVenta","setSelectedVenta","editModalIsOpen","setEditModalIsOpen","modalIsOpen","setModalIsOpen","currentPage","setCurrentPage","itemsPerPage","searchTerm","setSearchTerm","selectedProduct","setSelectedProduct","initialProducts","_id","precio","get","then","response","data","catch","error","console","handleKeyPress","e","key","filtered","filter","venta","toLowerCase","includes","handleProductSelect","selectedProductId","target","value","agregarProductoAVenta","productoId","productoExistente","find","p","nuevaListaProductos","prevNuevaVenta","eliminarProductoDeVenta","producto","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","handleInputChange","name","crearVenta","preventDefault","selectedDate","Date","currentDate","toISOString","alert","emailPattern","test","numberFields","invalidFields","forEach","field","isNaN","parseFloat","push","length","join","totalVenta","reduce","total","totalPedido","formattedData","post","log","editarVenta","id","productosEditados","put","eliminarVenta","delete","updatedVentas","updatedFilteredVentas","generarReportePDF","Array","isArray","doc","y","text","addPage","save","openEditModal","ventaId","ventaSeleccionada","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyPress","onClick","map","fechaVenta","formattedDate","getDate","getMonth","getFullYear","className","from","Math","ceil","_","index","isOpen","onRequestClose","onSubmit","newProducts","updatedProducts","idx","_c","$RefreshReg$"],"sources":["C:/Users/segur/Downloads/Api-rest-main/crud-ventas/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport Modal from \"react-modal\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nfunction App() {\n  // Estados\n  const [ventas, setVentas] = useState([]);\n  const [filteredVentas, setFilteredVentas] = useState([]);\n  const [nuevaVenta, setNuevaVenta] = useState({\n    fecha_venta: \"\",\n    metodo_pago: \"\",\n    total_venta: 0,\n    total_pedido: 0,\n    nombre: \"\",\n    telefono: \"\",\n    documento: \"\",\n    correo: \"\",\n    productos: [],\n  });\n\n  const [selectedVenta, setSelectedVenta] = useState(null);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(4);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedProduct, setSelectedProduct] = useState(\"\"); // Nuevo estado para almacenar el producto seleccionado\n  const initialProducts = [\n    {\n      _id: \"1\",\n      nombre: \"Vestido floral\",\n      precio: 35.99,\n    },\n    {\n      _id: \"2\",\n      nombre: \"Camisa de lino\",\n      precio: 25.49,\n    },\n    {\n      _id: \"3\",\n      nombre: \"Pantalón vaquero\",\n      precio: 29.99,\n    },\n    {\n      _id: \"4\",\n      nombre: \"Blusa estampada\",\n      precio: 19.99,\n    },\n    {\n      _id: \"5\",\n      nombre: \"Falda plisada\",\n      precio: 22.99,\n    },\n  ];\n\n  // Efectos de lado\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:9000/api/ventas\")\n      .then((response) => {\n        setVentas(response.data);\n        setFilteredVentas(response.data); // Inicialmente, mostrar todas las ventas\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  // Funciones\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      const filtered = ventas.filter((venta) =>\n        venta.documento.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFilteredVentas(filtered);\n    }\n  };\n\n  const handleProductSelect = (e) => {\n    const selectedProductId = e.target.value;\n    setSelectedProduct(selectedProductId);\n  };\n\n  const agregarProductoAVenta = (productoId) => {\n    const productoExistente = initialProducts.find((p) => p._id === productoId);\n\n    if (productoExistente) {\n      const nuevaListaProductos = [...nuevaVenta.productos, productoExistente];\n      setNuevaVenta((prevNuevaVenta) => ({\n        ...prevNuevaVenta,\n        productos: nuevaListaProductos,\n      }));\n    } else {\n      console.error(\"Producto no encontrado\");\n    }\n  };\n\n  // Función para eliminar un producto de la lista de productos en la venta\n  const eliminarProductoDeVenta = (productoId) => {\n    const nuevaListaProductos = nuevaVenta.productos.filter(\n      (producto) => producto._id !== productoId\n    );\n    setNuevaVenta((prevNuevaVenta) => ({\n      ...prevNuevaVenta,\n      productos: nuevaListaProductos,\n    }));\n  };\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredVentas.slice(indexOfFirstItem, indexOfLastItem);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNuevaVenta((prevNuevaVenta) => ({\n      ...prevNuevaVenta,\n      [name]: value,\n    }));\n  };\n\n  const crearVenta = (e) => {\n    e.preventDefault();\n\n    const selectedDate = new Date(nuevaVenta.fecha_venta);\n    const currentDate = new Date();\n\n    if (\n      selectedDate.toISOString().slice(0, 10) !==\n      currentDate.toISOString().slice(0, 10)\n    ) {\n      alert(\"Selecciona la fecha actual\");\n      return;\n    }\n\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(nuevaVenta.correo)) {\n      alert(\"Ingrese un correo electrónico válido\");\n      return;\n    }\n\n    const numberFields = [\"total_venta\", \"total_pedido\", \"telefono\"];\n    const invalidFields = [];\n\n    numberFields.forEach((field) => {\n      if (isNaN(parseFloat(nuevaVenta[field]))) {\n        invalidFields.push(field);\n      }\n    });\n\n    if (invalidFields.length > 0) {\n      alert(\"Los campos \" + invalidFields.join(\", \") + \" deben ser números\");\n      return;\n    }\n\n    const totalVenta = nuevaVenta.productos.reduce(\n      (total, producto) => total + producto.precio,\n      0\n    );\n\n    const totalPedido = totalVenta;\n\n    const formattedData = {\n      fecha_venta: currentDate.toISOString(),\n      metodo_pago: nuevaVenta.metodo_pago,\n      total_venta: totalVenta,\n      total_pedido: totalPedido,\n      nombre: nuevaVenta.nombre,\n      telefono: nuevaVenta.telefono,\n      documento: nuevaVenta.documento,\n      correo: nuevaVenta.correo,\n      productos: nuevaVenta.productos, // Verifica que esta parte esté bien formada\n    };\n\n    axios\n      .post(\"http://localhost:9000/api/ventas\", formattedData)\n      .then((response) => {\n        setVentas([...ventas, response.data]);\n        setNuevaVenta({\n          fecha_venta: \"\",\n          metodo_pago: \"\",\n          total_venta: 0,\n          total_pedido: 0,\n          nombre: \"\",\n          telefono: \"\",\n          documento: \"\",\n          correo: \"\",\n          productos: [], // Limpiar la lista de productos después de enviar la venta\n        });\n        setModalIsOpen(false);\n      })\n\n      .catch((error) => {\n        console.error(\"Error creating venta:\", error);\n      });\n    console.log(\"Datos a enviar:\", formattedData);\n  };\n\n  const editarVenta = (id, productosEditados) => {\n    axios\n      .put(`http://localhost:9000/api/ventas/${id}`, {\n        productos: productosEditados,\n      })\n      .then((response) => {\n        console.log(\"Productos de la venta editados:\", response.data);\n        // Aquí puedes manejar la respuesta después de editar los productos de la venta\n        // Por ejemplo, actualizar el estado o realizar otra acción necesaria\n      })\n      .catch((error) => {\n        console.error(\"Error al editar los productos de la venta:\", error);\n        // Aquí puedes manejar el error, mostrar un mensaje al usuario, etc.\n      });\n  };\n\n  const eliminarVenta = (id) => {\n    axios\n      .delete(`http://localhost:9000/api/ventas/${id}`)\n      .then(() => {\n        const updatedVentas = ventas.filter((venta) => venta._id !== id);\n        setVentas(updatedVentas);\n        const updatedFilteredVentas = filteredVentas.filter(\n          (venta) => venta._id !== id\n        );\n        setFilteredVentas(updatedFilteredVentas);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting venta:\", error);\n      });\n  };\n\n  const generarReportePDF = () => {\n    if (Array.isArray(currentItems)) {\n      const doc = new jsPDF();\n      let y = 15;\n\n      doc.text(\"Reporte de Ventas\", 15, 10);\n\n      currentItems.forEach((venta) => {\n        doc.text(`Fecha de Venta: ${venta.fecha_venta}`, 15, y);\n        doc.text(`Método de Pago: ${venta.metodo_pago}`, 15, y + 10);\n        doc.text(`Total de Venta: ${venta.total_venta}`, 15, y + 20);\n        doc.text(`Total de Pedido: ${venta.total_pedido}`, 15, y + 30);\n        doc.text(`Nombre: ${venta.nombre}`, 15, y + 40);\n        doc.text(`Teléfono: ${venta.telefono}`, 15, y + 50);\n        doc.text(`Documento: ${venta.documento}`, 15, y + 60);\n        doc.text(`Correo: ${venta.correo}`, 15, y + 70);\n        y += 90;\n        if (y >= 280) {\n          doc.addPage();\n          y = 15;\n        }\n      });\n\n      doc.save(\"reporte_ventas.pdf\");\n    } else {\n      console.error(\"currentItems no es un array:\", currentItems);\n    }\n  };\n  const openEditModal = (ventaId) => {\n    const ventaSeleccionada = ventas.find((venta) => venta._id === ventaId);\n    setSelectedVenta(ventaSeleccionada);\n    setEditModalIsOpen(true);\n  };\n\n  return (\n    <div>\n      <h1>Ventas</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Buscar por documento\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        onKeyPress={handleKeyPress}\n      />\n\n      <button onClick={() => setModalIsOpen(true)}>Agregar Nueva Venta</button>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Fecha de Venta</th>\n            <th>Método de Pago</th>\n            <th>Total de Venta</th>\n            <th>Total de Pedido</th>\n            <th>Nombre</th>\n            <th>Teléfono</th>\n            <th>Documento</th>\n            <th>Correo</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map((venta) => {\n            const fechaVenta = new Date(venta.fecha_venta);\n            const formattedDate = `${fechaVenta.getDate()}/${\n              fechaVenta.getMonth() + 1\n            }/${fechaVenta.getFullYear()}`;\n\n            return (\n              <tr key={venta._id}>\n                <td>{formattedDate}</td>\n                <td>{venta.metodo_pago}</td>\n                <td>{venta.total_venta}</td>\n                <td>{venta.total_pedido}</td>\n                <td>{venta.nombre}</td>\n                <td>{venta.telefono}</td>\n                <td>{venta.documento}</td>\n                <td>{venta.correo}</td>\n                <td>\n                  <button onClick={() => openEditModal(venta._id)}>\n                    Editar\n                  </button>\n                  <button onClick={() => eliminarVenta(venta._id)}>\n                    Eliminar\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        {Array.from(\n          { length: Math.ceil(filteredVentas.length / itemsPerPage) },\n          (_, index) => (\n            <button key={index + 1} onClick={() => paginate(index + 1)}>\n              {index + 1}\n            </button>\n          )\n        )}\n      </div>\n\n      <button onClick={generarReportePDF}>Generar Reporte PDF</button>\n\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n        <h2>Agregar Nueva Venta</h2>\n        <form onSubmit={crearVenta}>\n          <input\n            type=\"date\"\n            placeholder=\"Fecha de venta\"\n            name=\"fecha_venta\"\n            value={nuevaVenta.fecha_venta}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Método de pago\"\n            value={nuevaVenta.metodo_pago}\n            onChange={(e) =>\n              setNuevaVenta({ ...nuevaVenta, metodo_pago: e.target.value })\n            }\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Total de venta\"\n            value={nuevaVenta.total_venta}\n            onChange={(e) =>\n              setNuevaVenta({ ...nuevaVenta, total_venta: e.target.value })\n            }\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Total de pedido\"\n            value={nuevaVenta.total_pedido}\n            onChange={(e) =>\n              setNuevaVenta({ ...nuevaVenta, total_pedido: e.target.value })\n            }\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Nombre\"\n            value={nuevaVenta.nombre}\n            onChange={(e) =>\n              setNuevaVenta({ ...nuevaVenta, nombre: e.target.value })\n            }\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Teléfono\"\n            value={nuevaVenta.telefono}\n            onChange={(e) =>\n              setNuevaVenta({ ...nuevaVenta, telefono: e.target.value })\n            }\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Documento\"\n            value={nuevaVenta.documento}\n            onChange={(e) =>\n              setNuevaVenta({ ...nuevaVenta, documento: e.target.value })\n            }\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Correo\"\n            value={nuevaVenta.correo}\n            onChange={(e) =>\n              setNuevaVenta({ ...nuevaVenta, correo: e.target.value })\n            }\n          />\n\n          {/* Sección para seleccionar y agregar productos */}\n          <select value={selectedProduct} onChange={handleProductSelect}>\n            <option value=\"\">Selecciona un producto</option>\n            {initialProducts.map((producto) => (\n              <option key={producto._id} value={producto._id}>\n                {producto.nombre} - ${producto.precio}\n              </option>\n            ))}\n          </select>\n\n          {/* Botón para agregar producto a la venta */}\n          <button\n            type=\"button\"\n            onClick={() => agregarProductoAVenta(selectedProduct)}\n          >\n            Agregar Producto\n          </button>\n\n          {/* Mostrar lista de productos agregados a la venta */}\n          <ul>\n            {nuevaVenta.productos &&\n              nuevaVenta.productos.map((producto) => (\n                <li key={producto._id}>\n                  {producto.nombre} - ${producto.precio}\n                  <button onClick={() => eliminarProductoDeVenta(producto._id)}>\n                    Eliminar\n                  </button>\n                </li>\n              ))}\n          </ul>\n\n          {/* Botón para crear la venta */}\n          <button type=\"submit\">Crear Venta</button>\n        </form>\n      </Modal>\n      {/* Modal para editar la venta */}\n      <Modal\n        isOpen={editModalIsOpen}\n        onRequestClose={() => setEditModalIsOpen(false)}\n      >\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            editarVenta(selectedVenta._id, selectedVenta.productos);\n            setEditModalIsOpen(false);\n          }}\n        >\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setEditModalIsOpen(false)}>\n              &times;\n            </span>\n            <h2>Editar Productos de Venta</h2>\n            <ul>\n              {/* Aquí renderiza los detalles de la venta seleccionada */}\n              {selectedVenta &&\n                selectedVenta.productos.map((producto, index) => (\n                  <li key={index}>\n                    <input\n                      type=\"text\"\n                      value={producto.nombre}\n                      onChange={(e) => {\n                        const newProducts = [...selectedVenta.productos];\n                        newProducts[index].nombre = e.target.value;\n                        setSelectedVenta({\n                          ...selectedVenta,\n                          productos: newProducts,\n                        });\n                      }}\n                    />\n                    <input\n                      type=\"number\"\n                      value={producto.precio}\n                      onChange={(e) => {\n                        const newProducts = [...selectedVenta.productos];\n                        newProducts[index].precio = parseFloat(e.target.value);\n                        setSelectedVenta({\n                          ...selectedVenta,\n                          productos: newProducts,\n                        });\n                      }}\n                    />\n                    <button\n                      onClick={() => {\n                        const updatedProducts = selectedVenta.productos.filter(\n                          (_, idx) => idx !== index\n                        );\n                        setSelectedVenta({\n                          ...selectedVenta,\n                          productos: updatedProducts,\n                        });\n                      }}\n                    >\n                      Eliminar\n                    </button>\n                  </li>\n                ))}\n            </ul>\n            <button\n              onClick={() =>\n                setSelectedVenta({\n                  ...selectedVenta,\n                  productos: [\n                    ...(selectedVenta.productos || []),\n                    { nombre: \"\", precio: 0 },\n                  ],\n                })\n              }\n            >\n              Agregar Producto\n            </button>\n            <button type=\"submit\">Guardar Cambios</button>\n          </div>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}